{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleDocumentPressedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,2BAFhB,EAaEC,yBAA2B,SAACC,GAC1B,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,4BAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,4BAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,oBAAGA,UAAU,eAAb,sCAEGF,KAAKR,MAAMC,WAFd,aApBR,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.287af635.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentPressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentPressedKey);\n  }\n\n  handleDocumentPressedKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          The last pressed key is [\n          {this.state.pressedKey}\n          ]\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}